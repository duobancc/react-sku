{"version":3,"sources":["utils/cartesian.ts","utils/index.ts","component/SkuCreator/index.tsx","component/SkuSelect/index.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["f","a","b","concat","map","d","e","cartesian","c","uuid","replace","r","Math","random","toString","Option","Select","SkuCreator","props","skus","onChange","defaultProperties","forEach","sku","properties","prop","i","name","value","currentProp","find","p","values","includes","push","key","length","price","hold","useState","totalProperties","setTotalProperties","isShowDetail","setIsShowDetail","columns","setColumns","rows","setRows","property","add","prev","remove","ret","JSON","parse","stringify","splice","onChangeName","onChangeValues","Number","useEffect","_isShowDetail","_columns","_rows","cartesianItem","title","dataIndex","render","row","index","item","v","cartesianProperties","skuId","Array","isArray","width","prefix","required","target","_","isEqual","Item","label","wrapperCol","span","direction","addonBefore","defaultValue","mode","style","placeholder","type","danger","onClick","pagination","size","dataSource","bordered","TotalSkuHold","SkuSelect","data","optionsChange","onPressConfirm","count","setCount","spec","setSpec","canFlag","setCanFlag","prodPrice","setProdPrice","skuHold","setSkuHold","maxPrice","setMaxPrice","getSkuInfoByKey","_spec","sk","selectedSpec","Object","keys","k","selectedValue","sv","select","querySku","xorWith","judgeCanAdd","sks","_cf","filter","setSpecDisable","tags","currentSpec","sp","disable","onPressSpecOption","currentSpectValue","isCancel","prevSelectedSpectValue","cspec","reduce","currentSpecKey","__v","currentSpecName","currentSpecSelectedValue","_sk","_ssTemp","sIndex","findIndex","_sv","_tmpPath","_sst","hasHoldPath","isNotEmpty","skuCore","minPrice","countChange","sign","_count","message","warning","dataExtraHold","_tags","_maxPrice","_tempTagsStrArray","_skuHold","s","_canFlag","setDrawOptions","className","alt","src","image","o","oi","postData","itemId","num","tempSKus","mockItemData","App","setSkus","background","console","log","info","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"0TACMA,EAAI,SAACC,EAAGC,GAAJ,aAAU,MAAGC,OAAH,oBAAaF,EAAEG,KAAI,SAACC,GAAD,OAAOH,EAAEE,KAAI,SAACE,GAAD,MAAO,GAAGH,OAAOE,EAAGC,YAGzDC,EAFQ,SAAjBA,EAAkBN,EAAGC,GAAJ,2BAAUM,EAAV,iCAAUA,EAAV,yBAAiBN,EAAIK,EAAS,WAAT,GAAUP,EAAEC,EAAGC,IAAf,OAAsBM,IAAKP,G,iBCF1DQ,EAAO,WAClB,MAAO,uCAAuCC,QAAQ,SAAS,SAAUF,GAEvE,IAAMG,EAAqB,GAAhBC,KAAKC,SAAiB,EAGjC,OADgB,MAANL,EAAYG,EAAS,EAAJA,EAAW,GAC7BG,SAAS,QCCdC,EAAWC,IAAXD,OAsPOE,EA/Ne,SAACC,GAAW,IAChCC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,SACRC,EAA2C,GAM7C,OAAJF,QAAI,IAAJA,KAAMG,SAAQ,SAACC,GAAS,IAAD,EACrB,UAAAA,EAAIC,kBAAJ,SAAgBF,SAAQ,SAACG,EAAMC,GAC7B,GAAID,EAAKE,MAAQF,EAAKG,MAAO,CAC3B,IACiB,IADXC,EAAcR,EAAkBS,MAAK,SAACC,GAAD,OAAOA,EAAEJ,OAASF,EAAKE,QAClE,GAAIE,IACF,UAACA,EAAYG,cAAb,aAAC,EAAoBC,SAASR,EAAKG,UAAnC,UAA6CC,EAAYG,cAAzD,OAA6C,EAAoBE,KAAKT,EAAKG,aAE3EP,EAAkBa,KAAK,CACrBP,KAAMF,EAAKE,KACXQ,IAAK1B,IACLuB,OAAQ,CAACP,EAAKG,aAKF,IAAhBT,EAAKiB,SACQb,EAAIc,MACLd,EAAIe,SAzBiB,MA6BOC,mBAASlB,GA7BhB,mBA6BhCmB,EA7BgC,KA6BfC,EA7Be,OA8BCF,oBAAS,GA9BV,mBA8BhCG,EA9BgC,KA8BlBC,EA9BkB,OA+BTJ,mBAA+B,IA/BtB,mBA+BhCK,EA/BgC,KA+BvBC,EA/BuB,OAgCfN,mBAAQ,OAAYpB,QAAZ,IAAYA,IAAQ,IAhCb,mBAgChC2B,EAhCgC,KAgC1BC,EAhC0B,KAmCjCC,EAAW,CACfC,IADe,WAEbR,GAAmB,SAACS,GAAD,4BACdA,GADc,CAEjB,CACEvB,KAAM,GACNQ,IAAK1B,IACLuB,OAAQ,UAIdmB,OAXe,SAWRzB,GACLe,GAAmB,SAACS,GAClB,IAAME,EAAMC,KAAKC,MAAMD,KAAKE,UAAUL,IAEtC,OADAE,EAAII,OAAO9B,EAAG,GACP0B,MAGXK,aAlBe,SAkBF/B,EAAWC,GACtBc,GAAmB,SAACS,GAClB,IAAME,EAAG,YAAOF,GAEhB,OADAE,EAAI1B,GAAGC,KAAOA,EACPyB,MAGXM,eAzBe,SAyBAhC,EAAWM,GACxBS,GAAmB,SAACS,GAClB,IAAME,EAAG,YAAOF,GAEhB,OADAE,EAAI1B,GAAGM,OAASA,EACToB,OAKP7B,EAAM,SACIZ,EAAY0B,GACxBU,GAAQ,SAACG,GAGP,OAFAvC,EAAE0B,MAAQA,EACEgB,KAAKC,MAAMD,KAAKE,UAAUL,QAJtC3B,EAAM,SAQGZ,EAAY2B,GACvBS,GAAQ,SAACG,GAGP,OAFAvC,EAAE2B,KAAOqB,OAAOrB,GACJe,KAAKC,MAAMD,KAAKE,UAAUL,QA0F5C,OAnFAU,qBAAU,WACR,IAAIC,GAAgB,EACdC,EAAiC,GACjCC,EAAmB,GAEnBvC,EAAkD,GACxDgB,EAAgBlB,SAAQ,SAACG,GAAU,IAAD,EAChC,GAAIA,EAAKE,OAAL,UAAaF,EAAKO,cAAlB,aAAa,EAAaI,QAAQ,CACpC,IAAM4B,EAAqB,GAC3BH,GAAgB,EAEhBC,EAAS5B,KAAK,CACZ+B,MAAOxC,EAAKE,KACZuC,UAAW,aACX/B,IAAK,aACLgC,OAAQ,SAACvC,EAAOwC,EAAKC,GACnB,IAAMC,EAAO1C,EAAME,MAAK,SAACyC,GAAD,OAAYA,EAAE5C,OAASF,EAAKE,QACpD,cAAO2C,QAAP,IAAOA,OAAP,EAAOA,EAAM1C,SAIjBH,EAAKO,OAAOV,SAAQ,SAACM,GACnBoC,EAAc9B,KAAK,CACjBP,KAAMF,EAAKE,KACXC,aAGJJ,EAAWU,KAAK8B,OAKpB,IAAMQ,EAAsBjE,EAAS,WAAT,EAAaiB,GACtB,OAAnBgD,QAAmB,IAAnBA,KAAqBlD,SAAQ,SAAChB,EAAQoB,GACpCqC,EAAM7B,KAAK,CACTC,IAAKT,EACL+C,MAAOhE,IACPe,WAAYkD,MAAMC,QAAQrE,GAAKA,EAAI,CAACA,QAKxCwD,EAAS5B,KAAK,CACZ+B,MAAO,eACPC,UAAW,QACX/B,IAAK,QACLyC,MAAO,IACPT,OAAQ,SAACvC,EAAOwC,EAAKC,GACnB,OACE,kBAAC,IAAD,CACEzC,MAAOA,EACPiD,OAAO,SACPC,UAAQ,EACR1D,SAAU,SAACd,GAAD,OAAOiB,EAAkB6C,EAAK9D,EAAEyE,OAAOnD,aAMzDkC,EAAS5B,KAAK,CACZ+B,MAAO,eACPW,MAAO,IACPV,UAAW,OACX/B,IAAK,OACLgC,OAAQ,SAACvC,EAAOwC,EAAKC,GACnB,OACE,kBAAC,IAAD,CAAOzC,MAAOA,EAAOkD,UAAQ,EAAC1D,SAAU,SAACd,GAAD,OAAOiB,EAAiB6C,EAAK9D,EAAEyE,OAAOnD,aAKpFe,EAAgBkB,GAChBhB,EAAWiB,GAENkB,IAAEC,QAAQzC,EAAiBnB,IAC9B0B,EAAQgB,KAET,CAACvB,IAEJoB,qBAAU,WACA,OAARxC,QAAQ,IAARA,KAAW0B,KACV,CAACA,IAGF,oCACE,kBAAC,IAAKoC,KAAN,CAAWC,MAAM,2BAAOC,WAAY,CAAEC,KAAM,KAC1C,kBAAC,IAAD,CAAOC,UAAU,YACd9C,EAAgBpC,KAAI,SAACqB,EAAMC,GAAP,aACnB,kBAAC,IAAD,CAAOS,IAAKV,EAAKU,KACf,kBAAC,IAAD,CACEoD,YAAY,qBACZC,aAAc/D,EAAKE,KACnBP,SAAU,SAACd,GAAD,OAAO0C,EAASS,aAAa/B,EAAGpB,EAAEyE,OAAOnD,UAErD,kBAAC,IAAD,CACE6D,KAAK,OACLC,MAAO,CAAEd,MAAO,KAChBe,YAAY,uCACZ/D,MAAOH,EAAKO,OACZZ,SAAU,SAACmD,GAAD,OAAOvB,EAASU,eAAehC,EAAG6C,KAL9C,OAQG9C,QARH,IAQGA,GARH,UAQGA,EAAMO,cART,aAQG,EAAc5B,KAAI,SAACwB,GAAD,OACjB,kBAACb,EAAD,CAAQoB,IAAKP,EAAOA,MAAOA,GACxBA,OAIP,kBAAC,IAAD,CAAQgE,KAAK,OAAOC,QAAM,EAACC,QAAS,kBAAM9C,EAASG,OAAOzB,KAA1D,oBAKHc,EAAgBJ,OAAS,IACxB,kBAAC,IAAD,CAAQwD,KAAK,SAASE,QAAS9C,EAASC,KAAxC,8BAMLP,EACC,kBAAC,IAAKwC,KAAN,CAAWC,MAAM,2BAAOC,WAAY,CAAEC,KAAM,KAC1C,kBAAC,IAAD,CACEU,YAAY,EACZC,KAAK,QACLpD,QAASA,EACTqD,WAAYnD,EACZoD,UAAQ,KAIV,O,SCzNNC,G,OAAe,GAuUJC,EArUc,SAAClF,GAAW,IAC/BmF,EAAwCnF,EAAxCmF,KAAMC,EAAkCpF,EAAlCoF,cAAeC,EAAmBrF,EAAnBqF,eADS,EAEZhE,mBAAiB,GAFL,mBAE/BiE,EAF+B,KAExBC,EAFwB,OAGdlE,mBAAe,IAHD,mBAG/BmE,EAH+B,KAGzBC,EAHyB,OAIRpE,oBAAS,GAJD,mBAI/BqE,EAJ+B,KAItBC,EAJsB,OAKJtE,mBAAiB,GALb,mBAK/BuE,EAL+B,KAKpBC,EALoB,OAMRxE,mBAAS,GAND,mBAM/ByE,EAN+B,KAMtBC,EANsB,OAON1E,mBAAiB,GAPX,mBAO/B2E,EAP+B,KAOrBC,EAPqB,KAiBhCC,EAAkB,SAACC,EAAaC,GAEpC,IAAMC,EAAkD,GAaxD,GAXAC,OAAOC,KAAKJ,GAAO/F,SAAQ,SAACoG,GAC1B,IAAMC,EAAgBN,EAAMK,GAAG5F,MAAK,SAAC8F,GAAD,OAAQA,EAAGC,UAC3CF,GAEFJ,EAAarF,KAAK,CAChBP,KAAM+F,EACN9F,MAAO+F,EAAc/F,WAKvB2F,EAAanF,SAAWoF,OAAOC,KAAKJ,GAAOjF,OAA/C,CAfoD,IAmB9C0F,EADWzB,EAATlF,KACcW,MAAK,SAACP,GAG1B,OADiByD,IAAE+C,QAAQR,EAAchG,EAAIC,WAAYwD,IAAEC,SAC1C7C,UAEnB,OAAI0F,GAAYA,EAAQ,OAACR,QAAD,IAACA,IAAM,IACtBQ,EAAQ,OAACR,QAAD,IAACA,IAAM,IACbQ,GAGF,OAKLE,EAAc,SAAC7G,GAA6B,IAAD,IACzC8G,EAAMT,OAAOC,KAAKf,GAEpBwB,EADID,EAAIE,QAAO,SAACb,GAAD,OAAQZ,EAAKY,GAAIxF,MAAK,SAAC8F,GAAD,OAAQA,EAAGC,aAASzF,SAC7C6F,EAAI7F,OAOpB,GANKjB,GAASA,EAAKiB,SACjB8F,GAAM,GAEa,KAAb,OAAJ/G,QAAI,IAAJA,OAAA,EAAAA,EAAMiB,WAAgB,UAACjB,EAAK,UAAN,iBAAC,EAASK,kBAAV,aAAC,EAAqBY,SAAUjB,EAAK,GAAGmB,MAAQ,IACxE4F,GAAM,GAEJA,EAAK,CACP,IAAM5F,EAAO8E,EAAgBV,EAAM,QAC/BF,EAAQlE,GACVmE,EAASnE,GAIb,OADAuE,EAAWqB,GACJA,GAKHE,EAAiB,SAACC,GAAe,IAC7BlH,EAASkF,EAATlF,KACRqG,OAAOC,KAAKY,GAAM/G,SAAQ,SAACgG,GACzBe,EAAKf,GAAIhG,SAAQ,SAACsG,GAEhB,IAAMU,EAAW,UAAMhB,EAAN,YAAYM,EAAGhG,OAE1BkG,EAAW3G,EAAKW,MAAK,SAACP,GAE1B,OADsBA,EAAIC,WAAWM,MAAK,SAAAyG,GAAE,MAAI,UAAGA,EAAG5G,KAAN,YAAc4G,EAAG3G,SAAY0G,MACrD/G,EAAIe,QAG9BsF,EAAGY,SAAWV,QAGlBnB,EAAQ,eAAK0B,KA+CTI,EAAoB,SAACf,EAAWgB,GAA4B,IAAD,EAC3DC,GAAW,EACflC,EAAS,GAET,IAEMmC,GAFgBlC,EAAKc,OAAOC,KAAKf,GAAM5E,MAAK,SAACwF,GAAD,OAAQA,IAAOI,MAAM,KAAO,IAE5B5F,MAAK,SAAC+G,GAAD,OAAWA,EAAMhB,WAAW,GAEnFe,EAAuBf,QAAS,EAE5Be,IAA2BF,EAC7BC,GAAW,EAGXD,EAAkBb,QAAS,EAI7B,IAAMN,EAAeC,OAAOC,KAAKf,GAC9ByB,QAAO,SAACb,GAAD,OAAgBZ,EAAKY,GAAIxF,MAAK,SAAC8F,GAAD,OAAQA,EAAGC,aAChDiB,QAAO,SAAC5F,EAAgB6F,GAAoB,IAAD,EAC1C,MAAM,GAAN,mBAAW7F,GAAX,WAAoB6F,EAApB,sBAAsCrC,EAAKqC,GAAgBjH,MAAK,SAACkH,GAAD,OAASA,EAAInB,iBAA7E,aAAsC,EAAgDjG,WACrF,IACD+G,IAEGpB,EAAanF,QAEhBgG,EAAe1B,IAIfa,EAAanF,QAvEH,SAACmF,EAAwB0B,GAA8B,IAC7D9H,EAASkF,EAATlF,KACRqG,OAAOC,KAAKf,GAAMpF,SAAQ,SAACgG,GAEzB,GAAIA,IAAO2B,EAAiB,CAC1B,IAAMC,EAA2BxC,EAAKc,OAAOC,KAAKf,GAAM5E,MAAK,SAACqH,GAAD,OAAS7B,IAAO6B,MAAQ,IAAIrH,MAAK,SAAC8F,GAAD,OAAQA,EAAGC,UACzGnB,EAAKY,GAAIhG,SAAQ,SAACsG,GAEhB,IAAKA,EAAGC,OAAQ,CACd,IAAMuB,EAAO,YAAO7B,GAEpB,GAAM2B,EAA0B,CAC9B,IAAMG,EAASD,EAAQE,WAAU,SAACC,GAAD,OAASA,IAAG,UAAQjC,EAAR,YAAc4B,EAAyBtH,UACpFwH,EAAQ5F,OAAO6F,EAAQ,GAEzBD,EAAQlH,KAAR,UAAgBoF,EAAhB,YAAsBM,EAAGhG,QACzB,IAAM4H,EAAsB,GAC5BrI,EAAKG,SAAQ,SAACC,GAEK6H,EAAQjB,QAAO,SAACsB,GAI/B,QAHkBlI,EAAIC,WAAWM,MAAK,SAACC,GACrC,MAAO,UAAGA,EAAEJ,KAAL,YAAaI,EAAEH,SAAY6H,QAInBrH,SACTgH,EAAQhH,QAChBoH,EAAStH,KAAKX,MAGlB,IAAMmI,EAAcF,EAAS1H,MAAK,SAACC,GAAD,OAAOA,EAAEO,QACvCqH,EAAaD,EAAcA,EAAYpH,KAAO,EAClDsF,EAAGY,SAAWmB,UAKtB3B,EAAY7G,GAmCVyI,CAAQrC,EAAcG,GAGxB,IAAIrF,EAAQ,KAEVA,EADEkF,EAAanF,OACPgF,EAAgBV,EAAM,SAEzB,OAAGL,QAAH,IAAGA,OAAH,EAAGA,EAAMwD,SAEhB,IAAMvH,EAAI,UAAG8E,EAAgBV,EAAM,eAAzB,QAAoCP,EAC9CQ,EAAQ,eAAKD,IACTrE,GACF0E,EAAa1E,GAEf4E,EAAW3E,GACXgE,GAAiBA,EAAcI,IAuD3BoD,EAAc,SAACC,GACnB,IAAIC,EAASxD,EACb,GAAa,MAATuD,GAAgBC,EAAS,IACzBA,OACG,GAAa,MAATD,EACT,GAAInD,EAAS,CACX,IAAMtE,EAAO8E,EAAgBV,EAAM,QAC/BsD,EAAS1H,IACT0H,GAEFC,IAAQC,QAAQ,oDAChBF,EAAS1H,SAGT0H,EAGNvD,EAASuD,IAgBX,OAFApG,qBApCsB,YA/CC,WAAO,IAAD,MACrBzC,EAAI,OAAGkF,QAAH,IAAGA,OAAH,EAAGA,EAAMlF,KACbkG,EAAK,OAAGhB,QAAH,IAAGA,OAAH,EAAGA,EAAMK,KACdyD,EAAgB9D,EAAKW,QACvBoD,EAAc,GACdC,EAAS,iBAAGhE,QAAH,IAAGA,OAAH,EAAGA,EAAMwD,gBAAT,QAAqB,EAElC,GAAIxC,EACF+C,EAAQ/C,EACRJ,EAAWkD,OACN,CACL,IAAMG,EAAyB,GAC3BC,EAAW,EACX,OAAJpJ,QAAI,IAAJA,KAAMG,SAAQ,SAACkJ,GAAO,IAAD,EACnBD,GAAYC,EAAElI,KACb,OAADkI,QAAC,IAADA,GAAA,UAAAA,EAAGhJ,kBAAH,SAAeF,SAAQ,SAACS,GACjBqI,EAAMrI,EAAEJ,QACXyI,EAAMrI,EAAEJ,MAAQ,GAChB2I,EAAkBvI,EAAEJ,MAAQ,IAGzB2I,EAAkBvI,EAAEJ,MAAMM,SAASF,EAAEH,SACxC0I,EAAkBvI,EAAEJ,MAAMO,KAAKH,EAAEH,OACjCwI,EAAMrI,EAAEJ,MAAMO,KAAK,CACjBN,MAAOG,EAAEH,MACT4G,SAAS,EACTX,QAAQ,QAIV2C,EAAEnI,MAAQgI,IACZA,EAAYG,EAAEnI,UAGlB4E,EAAWsD,GACXpE,EAAeoE,EAEjB,IAAIE,IAAYpE,EAAKO,QAEA,KAAb,OAAJzF,QAAI,IAAJA,OAAA,EAAAA,EAAMiB,WAAgB,UAACjB,EAAK,GAAGK,kBAAT,aAAC,EAAoBY,SAAUjB,EAAK,GAAGmB,MAAQ,IACvEmI,GAAW,GAEb5D,EAAW4D,GACX1D,EAAY,iBAACV,QAAD,IAACA,OAAD,EAACA,EAAMwD,gBAAP,QAAmB,GAC/B1C,EAAYkD,GACZjC,EAAegC,GAGfM,GACAjE,GAAa,OAAJJ,QAAI,IAAJA,OAAA,EAAAA,EAAMG,QAAS,KAkCD,CAACH,IAGxB,yBAAKsE,UAAU,gBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,YACb,yBAAKC,IAAI,GAAGC,IAAKxE,EAAKyE,SAExB,yBAAKH,UAAU,WACb,yBAAKA,UAAU,cAActE,EAAKpC,OAClC,6BACE,yBAAK0G,UAAU,cACb,qCAAQ7D,IACNF,GAAWM,EAAWJ,EAAY,mCAASI,GAAmB,MAElE,yBAAKyD,UAAU,YAAf,gBAA8B3D,EAA9B,cAIN,yBAAK2D,UAAU,cACZnD,OAAOC,KAAKf,GAAMtG,KAAI,SAACsH,EAAGrD,GACzB,OAAO,yBAAKlC,IAAG,UAAKkC,EAAQ,GAAKsG,UAAU,SACzC,yBAAKA,UAAU,SAASjD,GACxB,yBAAKiD,UAAU,QACZjE,EAAKgB,GAAGtH,KAAI,SAAC2K,EAAGC,GACf,OACE,yBACE7I,IAAG,UAAKkC,EAAQ2G,GAChBlF,QAAS,kBAAOiF,EAAEvC,SAAWC,EAAkBf,EAAGqD,IAClDJ,UAAWI,EAAElD,OAAS,aAAekD,EAAEvC,QAAU,cAAgB,OAC9DuC,EAAEnJ,eAOjB,yBAAK+I,UAAU,SACb,yBAAKA,UAAU,SAAf,eAEE,yBAAKA,UAAU,cACb,yBAAKA,UAAU,OAAO7E,QAAS,kBAAMgE,EAAY,OAAjD,KACA,yBAAKa,UAAU,aAAanE,GAC5B,yBAAKmE,UAAU,OAAO7E,QAAS,kBAAMgE,EAAY,OAAjD,QAIN,yBAAKa,UAAU,YACb,yBAAKA,UAAW/D,EAAU,MAAQ,cAAed,QA5D5B,WAC3B,GAAKkC,EAAW,OAAC3B,QAAD,IAACA,OAAD,EAACA,EAAMlF,MAAvB,CAGA,IACM8J,EAAqB,CACzBxG,MAFY2C,EAAgBV,EAAM,SAGlCwE,OAAM,OAAE7E,QAAF,IAAEA,OAAF,EAAEA,EAAM6E,OACdC,IAAK3E,GAEO,OAAdD,QAAc,IAAdA,KAAiB0E,MAkDX,oBCvVNG,EAAgB,GACdC,EAAe,CACnBpH,MAAO,wBACP4F,SAAU,EACVqB,OAAQ,uBA+BKI,EA7BH,WAAO,IAAD,EACQ/I,mBAAgB,IADxB,mBACTpB,EADS,KACHoK,EADG,KAKhB,OACE,yBAAKZ,UAAU,OACb,yBAAKA,UAAU,oBACb,kBAAC,EAAD,CAAYvJ,SAAU,SAACD,GACrBiK,EAAWjK,GACVA,KAAM,KACT,kBAAC,IAAD,CAAQyE,KAAK,UAAUE,QATT,WAClByF,EAAQ,YAAIH,MAQR,6BAEF,yBAAK1F,MAAO,CAAE8F,WAAY,YACxB,yBAAKb,UAAU,mBACb,kBAAC,EAAD,CACErE,cAAe,SAACI,GACd+E,QAAQC,IAAI,yDAAahF,IAE3BH,eAAgB,SAACF,GACfoF,QAAQE,KAAK,iCAAStF,IAExBA,KAAI,aAAGlF,QAASkK,SCtBbO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCAdQ,IAASlI,OACP,kBAAC,IAAMmI,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.22e8549f.chunk.js","sourcesContent":["// @ts-nocheck\nconst f = (a, b) => [].concat(...a.map((d) => b.map((e) => [].concat(d, e))))\nconst cartesian: any = (a, b, ...c) => (b ? cartesian(f(a, b), ...c) : a)\n\nexport default cartesian\n","export const uuid = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    // eslint-disable-next-line no-bitwise\n    const r = (Math.random() * 16) | 0\n    // eslint-disable-next-line no-bitwise\n    const v = c === 'x' ? r : (r & 0x3) | 0x8\n    return v.toString(16)\n  })\n}","import { Button, Form, Input, Select, Space, Table } from 'antd'\nimport { ColumnsType } from 'antd/lib/table'\nimport React, { FC, useState, useEffect } from 'react'\nimport cartesian from '../../utils/cartesian'\nimport _ from 'lodash'\nimport { uuid } from '../../utils'\n\nconst { Option } = Select\n\nexport interface SkuItem {\n  key?: string\n  skuId?: string\n  properties?: { name: string; value: string }[]\n  /** 库存 */\n  hold?: number\n  /** 价格 */\n  price?: number\n}\n\ninterface Props {\n  skus: SkuItem[]\n  onChange?: (skus: SkuItem[]) => void\n}\n\ninterface TotalPropertyValues {\n  name: string\n  key: string\n  values?: string[]\n}\n\nconst SkuCreator: FC<Props> = (props) => {\n  const { skus, onChange } = props\n  const defaultProperties: TotalPropertyValues[] = []\n\n  // 计算默认展示的价格或者库存\n  let defaultPrice\n  let defaultHold\n\n  skus?.forEach((sku) => {\n    sku.properties?.forEach((prop, i) => {\n      if (prop.name && prop.value) {\n        const currentProp = defaultProperties.find((p) => p.name === prop.name)\n        if (currentProp) {\n          !currentProp.values?.includes(prop.value) && currentProp.values?.push(prop.value)\n        } else {\n          defaultProperties.push({\n            name: prop.name,\n            key: uuid(),\n            values: [prop.value]\n          })\n        }\n      }\n    })\n    if (skus.length === 1) {\n      defaultPrice = sku.price\n      defaultHold = sku.hold\n    }\n  })\n\n  const [totalProperties, setTotalProperties] = useState(defaultProperties)\n  const [isShowDetail, setIsShowDetail] = useState(false)\n  const [columns, setColumns] = useState<ColumnsType<SkuItem>>([])\n  const [rows, setRows] = useState<SkuItem[]>(skus ?? [])\n\n  // 商品规格操作相关\n  const property = {\n    add() {\n      setTotalProperties((prev) => [\n        ...prev,\n        {\n          name: '',\n          key: uuid(),\n          values: []\n        }\n      ])\n    },\n    remove(i: number) {\n      setTotalProperties((prev) => {\n        const ret = JSON.parse(JSON.stringify(prev))\n        ret.splice(i, 1)\n        return ret\n      })\n    },\n    onChangeName(i: number, name: string) {\n      setTotalProperties((prev) => {\n        const ret = [...prev]\n        ret[i].name = name\n        return ret\n      })\n    },\n    onChangeValues(i: number, values: string[]) {\n      setTotalProperties((prev) => {\n        const ret = [...prev]\n        ret[i].values = values\n        return ret\n      })\n    }\n  }\n\n  const sku = {\n    onChangePrice(r: SkuItem, price: string) {\n      setRows((prev) => {\n        r.price = price as any\n        const ret = JSON.parse(JSON.stringify(prev))\n        return ret\n      })\n    },\n    onChangeHold(r: SkuItem, hold: string) {\n      setRows((prev) => {\n        r.hold = Number(hold)\n        const ret = JSON.parse(JSON.stringify(prev))\n        return ret\n      })\n    }\n  }\n\n  // 当商品规格发生改变时候改变数据\n  useEffect(() => {\n    let _isShowDetail = false\n    const _columns: ColumnsType<SkuItem> = []\n    const _rows: SkuItem[] = []\n\n    const properties: { name: string; value: string }[][] = []\n    totalProperties.forEach((prop) => {\n      if (prop.name && prop.values?.length) {\n        const cartesianItem: any = []\n        _isShowDetail = true\n\n        _columns.push({\n          title: prop.name,\n          dataIndex: 'properties',\n          key: 'properties',\n          render: (value, row, index) => {\n            const item = value.find((v: any) => v.name === prop.name)\n            return item?.value\n          }\n        })\n\n        prop.values.forEach((value) => {\n          cartesianItem.push({\n            name: prop.name,\n            value\n          })\n        })\n        properties.push(cartesianItem)\n      }\n    })\n\n    // 使用笛卡尔乘积并根据属性计算所有可能的sku\n    const cartesianProperties = cartesian(...properties)\n    cartesianProperties?.forEach((e: any, i: any) => {\n      _rows.push({\n        key: i,\n        skuId: uuid(),\n        properties: Array.isArray(e) ? e : [e]\n      })\n    })\n\n    // 添加额外的栏\n    _columns.push({\n      title: '价格',\n      dataIndex: 'price',\n      key: 'price',\n      width: 200,\n      render: (value, row, index) => {\n        return (\n          <Input\n            value={value}\n            prefix=\"￥\"\n            required\n            onChange={(e) => sku.onChangePrice(row, e.target.value)}\n          />\n        )\n      }\n    })\n\n    _columns.push({\n      title: '库存',\n      width: 200,\n      dataIndex: 'hold',\n      key: 'hold',\n      render: (value, row, index) => {\n        return (\n          <Input value={value} required onChange={(e) => sku.onChangeHold(row, e.target.value)} />\n        )\n      }\n    })\n\n    setIsShowDetail(_isShowDetail)\n    setColumns(_columns)\n    // 当totalProperties 发生改变时候就要重置行元素\n    if (!_.isEqual(totalProperties, defaultProperties)) {\n      setRows(_rows)\n    }\n  }, [totalProperties])\n\n  useEffect(() => {\n    onChange?.(rows)\n  }, [rows])\n\n  return (\n    <>\n      <Form.Item label=\"商品规格\" wrapperCol={{ span: 18 }}>\n        <Space direction=\"vertical\">\n          {totalProperties.map((prop, i) => (\n            <Space key={prop.key}>\n              <Input\n                addonBefore=\"规格名\"\n                defaultValue={prop.name}\n                onChange={(e) => property.onChangeName(i, e.target.value)}\n              />\n              <Select\n                mode=\"tags\"\n                style={{ width: 400 }}\n                placeholder=\"添加规格属性\"\n                value={prop.values}\n                onChange={(v) => property.onChangeValues(i, v)}\n                // onChange={handleChange}\n              >\n                {prop?.values?.map((value) => (\n                  <Option key={value} value={value}>\n                    {value}\n                  </Option>\n                ))}\n              </Select>\n              <Button type=\"link\" danger onClick={() => property.remove(i)}>\n                删除\n              </Button>\n            </Space>\n          ))}\n          {totalProperties.length < 10 && (\n            <Button type=\"dashed\" onClick={property.add}>\n              添加规格\n            </Button>\n          )}\n        </Space>\n      </Form.Item>\n      {isShowDetail ? (\n        <Form.Item label=\"规格明细\" wrapperCol={{ span: 16 }}>\n          <Table\n            pagination={false}\n            size=\"small\"\n            columns={columns}\n            dataSource={rows}\n            bordered\n            // footer={() => 'Footer'}\n          />\n        </Form.Item>\n      ) : null}\n    </>\n  )\n}\n\nexport default SkuCreator\n","import { message } from 'antd'\nimport _ from 'lodash'\nimport React, { FC, useState, useEffect } from 'react'\n\nimport './index.scss'\n\nexport type SpecItem = {\n  select: boolean\n  value: string\n  disable?: boolean\n}\ntype SkuItem = any\nexport type Spec = {\n  [sk: string]: SpecItem[]\n}\ntype PostBody = {\n  skuId: string\n  itemId: string\n  num: number\n}\ninterface Props {\n  /** 商品数据 */\n  data: SkuItem\n  /** 点击确定按钮 */\n  onPressConfirm?: (p: PostBody) => void\n  /** 所选规格变化触发 */\n  optionsChange?: (s: Spec) => void\n  /** modal关闭时触发 */\n  onClose?: (s: Spec) => void\n}\n\nlet TotalSkuHold = 0 // 总库存\n\nconst SkuSelect: FC<Props> = (props) => {\n  const { data, optionsChange, onPressConfirm } = props\n  const [count, setCount] = useState<number>(1)\n  const [spec, setSpec] = useState<Spec>({})\n  const [canFlag, setCanFlag] = useState(false)\n  const [prodPrice, setProdPrice] = useState<number>(0)\n  const [skuHold, setSkuHold] = useState(0)\n  const [maxPrice, setMaxPrice] = useState<number>(0)\n\n\n  /**\n   * \n   * @param _spec 规格属性\n   * @param sk 该sku下的 sk这个key的值\n   * \n   * 不传sk的话返回所有信息\n   */\n  const getSkuInfoByKey = (_spec: Spec, sk?: string) => {\n    // 已选的规格：[{ name:规格名称, value:已选规格内容 }]\n    const selectedSpec: { name: string, value: string }[] = []\n\n    Object.keys(_spec).forEach((k) => {\n      const selectedValue = _spec[k].find((sv) => sv.select)\n      if (selectedValue) {\n        // 这块部分也可以在选择的时候直接处理\n        selectedSpec.push({\n          name: k,\n          value: selectedValue.value\n        }) \n      }\n    })\n    // 在规格没有全选的情况下 不执行查询操作\n    if (selectedSpec.length !== Object.keys(_spec).length) {\n      return\n    }\n    const { skus } = data\n    const querySku = skus.find((sku) => {\n      // 对比两个数组找到 两个都不存在的sku 如果为0 则说明完全匹配就是该sku\n      const diffSkus = _.xorWith(selectedSpec, sku.properties, _.isEqual)\n      return !diffSkus.length\n    })\n    if (querySku && querySku[sk ?? '']) {\n      return querySku[sk ?? '']\n    } else if (querySku) {\n      return querySku\n    } else {\n      return null\n    }\n  }\n\n  /** 判断是否可以添加进购物车，比如属性是否有选，库存情况等 */\n  const judgeCanAdd = (skus: any[] | undefined) => {\n    const sks = Object.keys(spec)\n    let s = sks.filter((sk) => spec[sk].find((sv) => sv.select)).length // 已经选择的规格个数\n    let _cf = s === sks.length\n    if (!skus || !skus.length) {\n      _cf = false\n    }\n    if (skus?.length === 1 && !skus[0]?.properties?.length && skus[0].hold <= 0) {\n      _cf = false\n    }\n    if (_cf) {\n      const hold = getSkuInfoByKey(spec, 'hold')\n      if (count > hold) {\n        setCount(hold)\n      }\n    }\n    setCanFlag(_cf)\n    return _cf\n  }\n\n  /** 用于规格都没选中的时候 设置 规格是否可以点击，该路径上如果跟该属性的组合没库存则该属性不能点击 */\n  // 可合并在 skuCore中\n  const setSpecDisable = (tags: any) => {\n    const { skus } = data\n    Object.keys(tags).forEach((sk) => {\n      tags[sk].forEach((sv: SpecItem) => {\n\n        const currentSpec = `${sk}:${sv.value}`\n        // 找到含有该规格的路径下 库存不为0的 sku\n        const querySku = skus.find((sku) => {\n          const queryProperty = sku.properties.find(sp => `${sp.name}:${sp.value}` === currentSpec)\n          return queryProperty && sku.hold\n        })\n        // 如果找到 对应该属性的路径 sku有不为0 的则可选\n        sv.disable = !querySku\n      })\n    })\n    setSpec({ ...tags })\n  }\n  /**\n   * 核心代码\n   * @param selectedSpec 已选中的数组\n   * @param currentSpecName 当前点击的规格的名称\n   */\n  const skuCore = (selectedSpec: string[], currentSpecName?: string) => {\n    const { skus } = data\n    Object.keys(spec).forEach((sk: string) => {\n      // 找出该规格中选中的值\n      if (sk !== currentSpecName) {\n        const currentSpecSelectedValue = spec[Object.keys(spec).find((_sk) => sk === _sk) || ''].find((sv) => sv.select)\n        spec[sk].forEach((sv: SpecItem) => {\n          // 判断当前的规格的值是否是选中的，如果是选中的 就不要判断是否可以点击\n          if (!sv.select) {\n            const _ssTemp = [...selectedSpec]\n            // 如果当前规格有选中的值\n            if (!!currentSpecSelectedValue) {\n              const sIndex = _ssTemp.findIndex((_sv) => _sv === `${sk}:${currentSpecSelectedValue.value}`)\n              _ssTemp.splice(sIndex, 1)\n            }\n            _ssTemp.push(`${sk}:${sv.value}`)\n            const _tmpPath: SkuItem[] = []\n            skus.forEach((sku: SkuItem) => {\n              // 找出skus里面包含目前所选中的规格的路径的数组的数量\n              const querSkus = _ssTemp.filter((_sst: string) => {\n                const querySpec = sku.properties.find((p) => {\n                  return `${p.name}:${p.value}` === _sst\n                })\n                return !!querySpec\n              })\n              const i = querSkus.length\n              if (i === _ssTemp.length) {\n                _tmpPath.push(sku) // 把包含该路径的sku全部放到一个数组里\n              }\n            })\n            const hasHoldPath = _tmpPath.find((p) => p.hold) // 判断里面是要有个sku不为0 则可点击\n            let isNotEmpty = hasHoldPath ? hasHoldPath.hold : 0\n            sv.disable = !isNotEmpty\n          }\n        })\n      }\n    })\n    judgeCanAdd(skus)\n  }\n  /** 规格选项点击事件 */\n  const onPressSpecOption = (k: string, currentSpectValue: any) => {\n    let isCancel = false\n    setCount(1)\n    // 找到在全部属性spec中对应的属性\n    const currentSpects = spec[Object.keys(spec).find((sk) => sk === k) || ''] || []\n    // 上一个被选中的的属性\n    const prevSelectedSpectValue: any = currentSpects.find((cspec) => cspec.select) || {}\n    // 设置前一个被选中的值为未选中\n    prevSelectedSpectValue.select = false\n    // 只有当当前点击的属性值不等于上一个点击的属性值时候设置为选中状态\n    if (prevSelectedSpectValue === currentSpectValue) {\n      isCancel = true\n    } else {\n      // 设置当前点击的状态为选中\n      currentSpectValue.select = true\n    }\n\n    // 全部有选中的规格数组 ##可优化\n    const selectedSpec = Object.keys(spec)\n      .filter((sk: string) => spec[sk].find((sv) => sv.select))\n      .reduce((prev: string[], currentSpecKey) => {\n        return [...prev, `${currentSpecKey}:${spec[currentSpecKey].find((__v) => __v.select)?.value}`]\n      }, [])\n    if (isCancel) {\n      // 如果是取消且全部没选中\n      if (!selectedSpec.length) {\n        // 初始化是否可点\n        setSpecDisable(spec)\n      }\n    }\n    // 如果规格中有选中的 则对整个规格就行 库存判断 是否可点\n    if (selectedSpec.length) {\n      skuCore(selectedSpec, k)\n    }\n\n    let price = null\n    if (selectedSpec.length) {\n      price = getSkuInfoByKey(spec, 'price')\n    } else {\n      price = data?.minPrice\n    }\n    const hold = getSkuInfoByKey(spec, 'hold') ?? TotalSkuHold\n    setSpec({ ...spec })\n    if (price) {\n      setProdPrice(price)\n    }\n    setSkuHold(hold)\n    optionsChange && optionsChange(spec)\n  }\n\n  const setDrawOptions = () => {\n    const skus = data?.skus\n    const _spec = data?.spec\n    const dataExtraHold = data.skuHold\n    let _tags: Spec = {}\n    let _maxPrice = data?.minPrice ?? 0\n    // 用于初始化默认选项\n    if (_spec) {\n      _tags = _spec\n      setSkuHold(dataExtraHold as number)\n    } else {\n      const _tempTagsStrArray: any = {} // 临时字符串数组\n      let _skuHold = 0\n      skus?.forEach((s) => {\n        _skuHold += s.hold\n        s?.properties?.forEach((p) => {\n          if (!_tags[p.name]) {\n            _tags[p.name] = []\n            _tempTagsStrArray[p.name] = []\n          }\n\n          if (!_tempTagsStrArray[p.name].includes(p.value)) {\n            _tempTagsStrArray[p.name].push(p.value)\n            _tags[p.name].push({\n              value: p.value,\n              disable: false,\n              select: false\n            })\n          }\n        })\n        if (s.price > _maxPrice) {\n          _maxPrice = s.price\n        }\n      })\n      setSkuHold(_skuHold)\n      TotalSkuHold = _skuHold\n    }\n    let _canFlag = !data.canFlag ? false : true\n    /**  */\n    if (skus?.length === 1 && !skus[0].properties?.length && skus[0].hold <= 0) {\n      _canFlag = false\n    }\n    setCanFlag(_canFlag)\n    setProdPrice(data?.minPrice ?? 0)\n    setMaxPrice(_maxPrice)\n    setSpecDisable(_tags)\n  }\n  const openCurDrawer = () => {\n    setDrawOptions()\n    setCount(data?.count || 1)\n  }\n\n  const countChange = (sign: '-' | '+') => {\n    let _count = count\n    if (sign === '-' && _count > 1) {\n      --_count\n    } else if (sign === '+') {\n      if (canFlag) {\n        const hold = getSkuInfoByKey(spec, 'hold')\n        if (_count < hold) {\n          ++_count\n        } else {\n          message.warning('数量不能大于库存')\n          _count = hold\n        }\n      } else {\n        ++_count\n      }\n    }\n    setCount(_count)\n  }\n  const onPressConfirmButton = () => {\n    if (!judgeCanAdd(data?.skus)) {\n      return\n    }\n    const skuId = getSkuInfoByKey(spec, 'skuId')\n    const postData: PostBody = {\n      skuId,\n      itemId: data?.itemId,\n      num: count\n    }\n    onPressConfirm?.(postData)\n  }\n  useEffect(openCurDrawer, [data])\n\n  return (\n    <div className=\"drawer-inner\">\n      <div className=\"prod-info\">\n        <div className=\"prod-img\">\n          <img alt=\"\" src={data.image} />\n        </div>\n        <div className=\"content\">\n          <div className=\"item-title\">{data.title}</div>\n          <div>\n            <div className='price-wrap'>\n              <span>¥{prodPrice}</span>\n              {!canFlag && maxPrice > prodPrice ? <span>~ {maxPrice}</span> : null}\n            </div>\n            <div className='sku-hold'>库存 {skuHold} 件</div>\n          </div>\n        </div>\n      </div>\n      <div className=\"spec-inner\">\n        {Object.keys(spec).map((k, index) => {\n          return <div key={`${index + 1}`} className=\"items\">\n            <div className=\"title\">{k}</div>\n            <div className=\"tags\">\n              {spec[k].map((o, oi) => {\n                return (\n                  <div\n                    key={`${index + oi}`}\n                    onClick={() => !o.disable && onPressSpecOption(k, o)}\n                    className={o.select ? \"tag active\" : o.disable ? \"tag disable\" : 'tag'}>\n                      {o.value}\n                  </div>\n                )\n              })}\n            </div>\n          </div>\n        })}\n        <div className=\"items\">\n          <div className=\"title\">\n            数量\n            <div className=\"count-wrap\">\n              <div className=\"sign\" onClick={() => countChange('-')}>-</div>\n              <div className=\"count-box\">{count}</div>\n              <div className=\"sign\" onClick={() => countChange('+')}>+</div>\n            </div>\n          </div>\n        </div>\n        <div className=\"btn-wrap\">\n          <div className={canFlag ? \"btn\" : \"btn disable\"} onClick={onPressConfirmButton}>\n            确认\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SkuSelect\n","import React, { useState } from 'react'\nimport { Button } from 'antd'\nimport './App.css';\nimport SkuCreator from './component/SkuCreator'\nimport SkuSelect from './component/SkuSelect'\n\nlet tempSKus: any = []\nconst mockItemData = {\n  title: 'react-sku组件',\n  minPrice: 1,\n  itemId: 'test_csdfdge8je3nnc'\n}\nconst App = () => {\n  const [skus, setSkus] = useState<any[]>([])\n  const confirmSkus = () => {\n    setSkus([...tempSKus])\n  }\n  return (\n    <div className=\"app\">\n      <div className=\"sku-creator-wrap\">\n        <SkuCreator onChange={(skus) => {\n          tempSKus = skus\n        }} skus={[]} />\n        <Button type=\"primary\" onClick={confirmSkus}>确认添加</Button>\n      </div>\n      <div style={{ background: '#f7f7f7' }}>\n        <div className=\"sku-select-wrap\">\n          <SkuSelect\n            optionsChange={(spec) => {\n              console.log('点击的规格属性变化', spec)\n            }}\n            onPressConfirm={(data) => {\n              console.info('提交的数据', data)\n            }}\n            data={{skus, ...mockItemData}} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}